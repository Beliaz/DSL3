/**
 * generated by Xtext 2.13.0
 */
package uibk.ac.at.qe.dsl.game.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uibk.ac.at.qe.dsl.game.GamePackage;
import uibk.ac.at.qe.dsl.game.LevelDeclaration;
import uibk.ac.at.qe.dsl.game.LevelTransition;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Level Transition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uibk.ac.at.qe.dsl.game.impl.LevelTransitionImpl#getLevelFrom <em>Level From</em>}</li>
 *   <li>{@link uibk.ac.at.qe.dsl.game.impl.LevelTransitionImpl#getLevelTo <em>Level To</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LevelTransitionImpl extends MinimalEObjectImpl.Container implements LevelTransition
{
  /**
   * The cached value of the '{@link #getLevelFrom() <em>Level From</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLevelFrom()
   * @generated
   * @ordered
   */
  protected LevelDeclaration levelFrom;

  /**
   * The cached value of the '{@link #getLevelTo() <em>Level To</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLevelTo()
   * @generated
   * @ordered
   */
  protected LevelDeclaration levelTo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LevelTransitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.LEVEL_TRANSITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LevelDeclaration getLevelFrom()
  {
    if (levelFrom != null && levelFrom.eIsProxy())
    {
      InternalEObject oldLevelFrom = (InternalEObject)levelFrom;
      levelFrom = (LevelDeclaration)eResolveProxy(oldLevelFrom);
      if (levelFrom != oldLevelFrom)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GamePackage.LEVEL_TRANSITION__LEVEL_FROM, oldLevelFrom, levelFrom));
      }
    }
    return levelFrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LevelDeclaration basicGetLevelFrom()
  {
    return levelFrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLevelFrom(LevelDeclaration newLevelFrom)
  {
    LevelDeclaration oldLevelFrom = levelFrom;
    levelFrom = newLevelFrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.LEVEL_TRANSITION__LEVEL_FROM, oldLevelFrom, levelFrom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LevelDeclaration getLevelTo()
  {
    if (levelTo != null && levelTo.eIsProxy())
    {
      InternalEObject oldLevelTo = (InternalEObject)levelTo;
      levelTo = (LevelDeclaration)eResolveProxy(oldLevelTo);
      if (levelTo != oldLevelTo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GamePackage.LEVEL_TRANSITION__LEVEL_TO, oldLevelTo, levelTo));
      }
    }
    return levelTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LevelDeclaration basicGetLevelTo()
  {
    return levelTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLevelTo(LevelDeclaration newLevelTo)
  {
    LevelDeclaration oldLevelTo = levelTo;
    levelTo = newLevelTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.LEVEL_TRANSITION__LEVEL_TO, oldLevelTo, levelTo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.LEVEL_TRANSITION__LEVEL_FROM:
        if (resolve) return getLevelFrom();
        return basicGetLevelFrom();
      case GamePackage.LEVEL_TRANSITION__LEVEL_TO:
        if (resolve) return getLevelTo();
        return basicGetLevelTo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.LEVEL_TRANSITION__LEVEL_FROM:
        setLevelFrom((LevelDeclaration)newValue);
        return;
      case GamePackage.LEVEL_TRANSITION__LEVEL_TO:
        setLevelTo((LevelDeclaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.LEVEL_TRANSITION__LEVEL_FROM:
        setLevelFrom((LevelDeclaration)null);
        return;
      case GamePackage.LEVEL_TRANSITION__LEVEL_TO:
        setLevelTo((LevelDeclaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.LEVEL_TRANSITION__LEVEL_FROM:
        return levelFrom != null;
      case GamePackage.LEVEL_TRANSITION__LEVEL_TO:
        return levelTo != null;
    }
    return super.eIsSet(featureID);
  }

} //LevelTransitionImpl

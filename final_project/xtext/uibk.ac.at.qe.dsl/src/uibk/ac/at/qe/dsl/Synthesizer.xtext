grammar uibk.ac.at.qe.dsl.synthesizer.Synthesizer with org.eclipse.xtext.common.Terminals

generate synthesizer "http://www.ac.uibk/at/qe/dsl/synthesizer/Synthesizer"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

/*------------------- Toplevel ------------------- */

Top:
	{Top}

	
	'Circuits' '{'
		circuits+=Circuit*
	'}'
	
	'CircuitConnections' '{'
		circuitConnection+=CircuitConnection*
	'}'
	
	'Controls' '{'
		control=Control	
	'}'
;

/*------------------- Circuit ------------------- */

	Circuit:
		name=STRING '('
			'Sounds' '{'
				sounds+=Sound*
			'}'
			
			'Properties' '{'
				properties+=Properties*
			'}'
			
			'Connections' '{'
				connections+=Connection*
			'}'
		')'
	;
	
	/*------------------- Sound ------------------- */		
	
		Sound:
			oscillator=Oscillator |
			lag=LAG |
			passFilter=PassFilter |
			bandPass=BandPass |
			add=Add |
			multiply=Multiply |
			div=Div
		;
		
		Oscillator:
			 'Oscillator' name=STRING '('
			 	'output' output=(BOOLEAN)
			 	'type' type=OscillatorType
				'min' min=FLOAT
				'maximum' maximum=FLOAT
				'default' default=FLOAT
			')'
		;
		
		LAG:
			 'LAG' name=STRING '('
			 	'output' output=(BOOLEAN)
			 	'time' time=FLOAT
			 	'default' default=FLOAT
			')'
		;
		
		PassFilter:
			'PassFilter' name=STRING '('
			 	'output' output=(BOOLEAN)
			 	'type' type=PassFilterType
				'frequency' frequency=FLOAT
			')'
		;
		
		BandPass:
			'BandPass' name=STRING '('
			 	'output' output=(BOOLEAN)
				'lower_frequency' lower_frequency=FLOAT
				'upper_frequency' upper_frequency=FLOAT
			')'
		;
		
		Add:
			'Add' name=STRING '('
			 	'output' output=(BOOLEAN)
			')'
		;
		
		Multiply:
			'Multiply' name=STRING '('
			 	'output' output=(BOOLEAN)
			')'
		;
		
		
		Div:
			'Divide' name=STRING '('
			 	'output' output=(BOOLEAN)
			')'
		;

		/*------------------- Properties ------------------- */	

		Properties:
			name=STRING values+=Property+
		;

		Property:
			soundName=ID propertyName=ID
		;

		/*------------------- Connection ------------------- */	

		Connection:
			sound1=ID property1=STRING sound2=ID property2=STRING 
		;
		
/*------------------- Circuit Connection ------------------- */	

	CircuitConnection:
		circuitA=ID circuitB=ID
	;

/*------------------- Control ------------------- */	

	Control:
		window=Window
		'Grid' name=STRING '{'
			columns+=Column*
			rows+=Row*
			grid+=Grid*
		'}'
	;

		/*------------------- Window ------------------- */		

		Window:
			'Window' name=STRING
			'{'
				'width' width=INT
				'height' height=INT
			'}'
		;
		
		/*------------------- Grid ------------------- */	
				
		Grid:
			'Grid' name=STRING '{'
				(
					'column' column=INT
					'row' row=INT
					columns+=Column*
					rows+=Row*
					(
						grid+=Grid* controls+=ControlElement*
					)
				)
			'}'
		;
		
			/*------------------- Column ------------------- */	
		
			Column:
				'Column' size=FLOAT
			;
			
			/*------------------- Row ------------------- */	
			
			Row:
				'Row' size=FLOAT
			;
			
			/*------------------- Control Element ------------------- */	
			
			ControlElement:
				rotaryKnob=RotaryKnob |
				slider=Slider |
				audioScope=AudioScope
			;
			
			/*------------------- Rotary Knob ------------------- */	
			
			RotaryKnob:
				'rotaryKnob' name=STRING '('
					'column' column=INT
					'row' row=INT
					'connection' '('
						'type' type=ConnectionType
						'value' value=FLOAT 
						'target' target=STRING
						'property' property=STRING
					')'
				')'
			;
			
			/*------------------- Slider ------------------- */	
			
			Slider:
				
				'slider' name=STRING '('
					'column' column=INT
					'row' row=INT
				')'
			;
			
			/*------------------- Scope ------------------- */	
			
			AudioScope:
				'audioScope' name=STRING '('
					'column' column=INT
					'row' row=INT
					'connection' '('
						'target' target=ID
					')'
				')'
			;
			

/*------------------- Data Types ------------------- */	

FLOAT returns ecore::EFloat:
	INT '.' INT
;


/*------------------- Enums ------------------- */	

enum BOOLEAN:
	TRUE='true' | FALSE='false'
;

enum OscillatorType:
	SAW_TOOTH='sawTooth' | SINE='sine' | 
	SQUARE='square' | TRIANGLE='triangle'
;

enum PassFilterType:
	HIGH='high' | LOW='low'
;
enum ConnectionType:
	LINEAR='linear' |
	EXPONENTIAL='exponential'
;
